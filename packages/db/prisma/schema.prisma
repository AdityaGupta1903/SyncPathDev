// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  UserId                  String        @id @default(uuid())
  email                   String        @unique
  Password                String
  Zaps                    Zap[]
  GmailTraits             GmailTraits[]
  GmailAccessToken        String?
  GmailRefreshToken       String?
  DriveAccessToken        String?
  DriveRefreshToken       String?
  SpreadSheetAccessToken  String?
  SpreadSheetRefreshToken String?
  isGmailConnected        Boolean?      @default(false)
  isDriveConnected        Boolean?      @default(false)
  isSpreadSheetConnected  Boolean?      @default(false)
  MsgAcknowledged         String[]
}

model GmailTraits {
  TraitId         String  @id @default(uuid())
  Traitname       String
  UserId          String  @unique
  User            User    @relation(fields: [UserId], references: [UserId])
  SpreadSheetName String?
  SpreadSheetId   String?
}

model Zap {
  ZapId   String   @id @default(uuid())
  ZapName String
  UserId  String
  User    User     @relation(fields: [UserId], references: [UserId])
  ZapRun  ZapRun[]
  Actions Action[]
  Trigger Trigger?
}

model Trigger {
  TriggerId          String           @id @default(uuid())
  ZapId              String           @unique
  AvailabletriggerId String
  Zap                Zap              @relation(fields: [ZapId], references: [ZapId])
  AvailableTrigger   AvailableTrigger @relation(fields: [AvailabletriggerId], references: [AvailabletriggerId])
}

model Action {
  ActionId          String         @id @default(uuid())
  ZapId             String         @unique
  Zap               Zap            @relation(fields: [ZapId], references: [ZapId])
  SortingOrder      Int            @default(0)
  AvailableActionId String         @unique
  AvailabeAction    AvailabeAction @relation(fields: [AvailableActionId], references: [AvailableActionId])
}

model ZapRun {
  ZapRunId     String        @id @default(uuid())
  ZapId        String
  MetaData     String
  Zap          Zap           @relation(fields: [ZapId], references: [ZapId])
  ZapRunOutBox ZapRunOutBox?
}

model ZapRunOutBox {
  ZapRunOutBoxId String @id @default(uuid())
  ZapRunId       String @unique
  MetaData       String
  Zap            ZapRun @relation(fields: [ZapRunId], references: [ZapRunId])
}

model AvailableTrigger {
  AvailabletriggerId String    @id @default(uuid())
  TriggerName        String
  Trigger            Trigger[]
}

model AvailabeAction {
  AvailableActionId   String   @id @default(uuid())
  AvailableActionName String
  Action              Action[]
}
